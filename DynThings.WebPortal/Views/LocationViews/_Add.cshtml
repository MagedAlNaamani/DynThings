
@model DynThings.Data.Models.LocationView

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title" id="myModalLabel">View Editor</h4>
    <div class="modal-body">
        @using (Html.BeginForm("AddPV", "LocationViews", FormMethod.Post, new { id = "LocationViewAddForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

            @*@Html.LabelFor(model => model.LocationViewTypeID, "TypeID", htmlAttributes: new { @class = "" })*@
            
            @Html.DropDownList("LocationViewTypeID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LocationViewTypeID, "", new { @class = "text-danger" })

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Save changes</button>
            </div>
        }
    </div>
</div>
<script>
    $(document).ready(function () {
        AttachEventLocationViewAddForm();

    });

</script>
