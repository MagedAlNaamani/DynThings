@model DynThings.Data.Models.LocationView

<div class="row">
    <div class="col-md-9">
        <div id='myMap' style="position: relative; width: 100%; height: 100%; height: 400px"></div>
    </div>
    <div class="col-md-3">
        @using (Html.BeginForm("EditMapPV", "LocationViews", FormMethod.Post, new { id = "LocationViewMapEditForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)


            <span>Latitude</span>
            @Html.EditorFor(model => model.X, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.X, "", new { @class = "text-danger" })
            <br />

            <span>Longitude</span>
            @Html.LabelFor(model => model.Y, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.Y, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Y, "", new { @class = "text-danger" })
            <br />

            <span>Zoom</span>
            @Html.LabelFor(model => model.Z, htmlAttributes: new { @class = "" })
            @Html.EditorFor(model => model.Z, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Z, "", new { @class = "text-danger" })
            <br />

            <button type="button" class="btn btn-info" onclick="getEditLocationViewMap(@Model.X,@Model.Y,@Model.Z);">Reload</button>
            <button type="submit" class="btn btn-primary">Save changes</button>
        }
    </div>
</div>

<script>
    $(document).ready(function () {
        getEditLocationViewMap(@Model.X,@Model.Y,@Model.Z);
        AttachEventLocationViewMapEditForm(@Model.ID);
    });


</script>



